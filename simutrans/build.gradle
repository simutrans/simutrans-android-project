apply plugin: 'com.android.application'

android {
    namespace "com.simutrans"
    compileSdkVersion 34
    
    defaultConfig {
        applicationId "com.simutrans"
        minSdkVersion 24
        targetSdkVersion 34
        versionCode 10912
        versionName "124.0.1 Nightly"
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_APP_PLATFORM=android-24", "-DANDROID_STL=c++_shared", "-DSIMUTRANS_BACKEND=sdl2", "-DSIMUTRANS_USE_ZSTD=ON", "-DSIMUTRANS_USE_FLUIDSYNTH_MIDI=ON", "-DSIMUTRANS_MULTI_THREAD=OFF", "-DSIMUTRANS_USE_OWN_PAKINSTALL=ON"
                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    applicationVariants.all { variant ->
        tasks["merge${variant.name.capitalize()}Assets"]
            .dependsOn("externalNativeBuild${variant.name.capitalize()}")
    }
    if (!project.hasProperty('EXCLUDE_NATIVE_LIBS')) {
        sourceSets.main {
            jniLibs.srcDir 'libs'
        }
        externalNativeBuild {
            cmake {
                path 'jni/CMakeLists.txt'
            }
        }
       
    }
    lintOptions {
        abortOnError false
    }
    signingConfigs {
        release {
            storeFile = file(System.getenv("SIGNING_KEYSTORE"))
            storePassword System.getenv("SIGNING_STORE_PASSWORD")
            keyAlias System.getenv("SIGNING_KEY_ALIAS")
            keyPassword System.getenv("SIGNING_KEY_PASSWORD")
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
}
